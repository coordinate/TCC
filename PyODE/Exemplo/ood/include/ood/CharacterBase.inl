/*!
 * @file CharacterBase.inl
 * @author Rocco Martino
 */
/***************************************************************************
 *   Copyright (C) 2013 by Rocco Martino                                   *
 *   martinorocco@gmail.com                                                *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Lesser General Public License as        *
 *   published by the Free Software Foundation; either version 2.1 of the  *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU Lesser General Public License for more details.                   *
 *                                                                         *
 *   You should have received a copy of the GNU Lesser General Public      *
 *   License along with this program; if not, write to the                 *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#ifndef _OOD_CHARACTERBASE_INL
#define _OOD_CHARACTERBASE_INL

/* ======================================================================= */
/* ....................................................................... */
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline ood::RigidBody*
ood::CharacterBase::getBody(void)
{
    return m_body.get() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const ood::RigidBody*
ood::CharacterBase::getBody(void) const
{
    return m_body.get() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline ood::AMotorJoint*
ood::CharacterBase::getAngularMotor(void)
{
    return m_amotor.get() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const ood::AMotorJoint*
ood::CharacterBase::getAngularMotor(void) const
{
    return m_amotor.get() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline ood::LMotorJoint*
ood::CharacterBase::getLinearMotor(void)
{
    return m_lmotor.get() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const ood::LMotorJoint*
ood::CharacterBase::getLinearMotor(void) const
{
    return m_lmotor.get() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setHeight(ooReal height)
{
    m_height = height ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline ooReal
ood::CharacterBase::getHeight(void) const
{
    return m_height ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setMotion(const osg::Vec3& velocity, ooReal fmax)
{
    m_motion_velocity = velocity ;
    m_motion_fmax = fmax ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::getMotion(osg::Vec3& velocity, ooReal& fmax) const
{
    velocity = m_motion_velocity ;
    fmax = m_motion_fmax ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setUpVersor(const osg::Vec3& up)
{
    m_up_versor = up ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const osg::Vec3&
ood::CharacterBase::getUpVersor(void) const
{
    return m_up_versor ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setSideVersor(const osg::Vec3& rhs)
{
    m_side_versor = rhs ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const osg::Vec3&
ood::CharacterBase::getSideVersor(void) const
{
    return m_side_versor ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setFrontVersor(const osg::Vec3& front)
{
    m_front_versor = front ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const osg::Vec3&
ood::CharacterBase::getFrontVersor(void) const
{
    return m_front_versor ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setYaw(ooReal yaw)
{
    m_yaw = yaw ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline ooReal
ood::CharacterBase::getYaw(void) const
{
    return m_yaw ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline ooReal
ood::CharacterBase::getCurrentYaw(void) const
{
    return m_current_yaw ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setCurrentYaw(ooReal yaw)
{
    m_current_yaw = yaw ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setPitch(ooReal pitch)
{
    m_pitch = pitch ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline ooReal
ood::CharacterBase::getPitch(void) const
{
    return m_pitch ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline ooReal
ood::CharacterBase::getCurrentPitch(void) const
{
    return m_current_pitch ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setCurrentPitch(ooReal pitch)
{
    m_current_pitch = pitch ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setElasticity(ooReal elasticity)
{
    m_elasticity = elasticity ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline ooReal
ood::CharacterBase::getElasticity(void) const
{
    return m_elasticity ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setJump(const osg::Vec3& force, ooReal res_time)
{
    if( m_jump_res_time <= 0.0 ) {
        m_jump_force = force ;
        m_jump_res_time = res_time ;
    }
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline bool
ood::CharacterBase::isOnGround(void) const
{
    return m_is_on_ground ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setFootstepInfo( const CharacterBase::FootstepInfo& info )
{
    m_footstep_info = info ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const ood::CharacterBase::FootstepInfo&
ood::CharacterBase::getFootstepInfo(void) const
{
    return m_footstep_info ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
ood::CharacterBase::setFootContactInfo( const CharacterBase::FootContactInfo& info )
{
    m_foot_contact_info = info ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const ood::CharacterBase::FootContactInfo&
ood::CharacterBase::getFootContactInfo(void) const
{
    return m_foot_contact_info ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline ooReal
ood::CharacterBase::getFootstepDerivative(void) const
{
    return m_footstep_derivative ;
}
/* ....................................................................... */
/* ======================================================================= */




#endif /* _OOD_CHARACTERBASE_INL */
